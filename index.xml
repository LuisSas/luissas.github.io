<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LuisSas on LuisSas</title>
    <link>/</link>
    <description>Recent content in LuisSas on LuisSas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 -0500</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pruebas unitarias con Spock</title>
      <link>/post/unittestwithspock/</link>
      <pubDate>Tue, 01 May 2018 20:01:09 -0500</pubDate>
      
      <guid>/post/unittestwithspock/</guid>
      <description>

&lt;p&gt;Spock es un framework de testing para Java y Groovy, hace que los test se escriban de una manera muy facil, clara de leer y saber que van a probar.&lt;/p&gt;

&lt;p&gt;Gracias a que sus pruebas que se dividen en bloques estas se ven descriptivas, ayuda que se puedan entender y añadir propias de manera muy sencilla.&lt;/p&gt;

&lt;p&gt;Gracias a que se ocupa Groovy para las pruebas esto hace que el manejo de estructuras de datos, como listas o mapas se puedan escribir con muy poco código.&lt;/p&gt;

&lt;h3 id=&#34;bloques&#34;&gt;Bloques&lt;/h3&gt;

&lt;p&gt;Gracias al manejo de bloques en spock y que cada uno puede describirse por separado, los test son muy descriptivos en cuanto a que se requiere en cada parte y cuando se ejecuta que&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class MathSpec extends Specification{
  def &amp;quot;Sum of two numbers&amp;quot;(){
    given:&amp;quot;the first number&amp;quot;
      Integer number1 = 10
    and:&amp;quot;the second number&amp;quot;
      Integer number2 = 20
    when:&amp;quot;The two numbers add up&amp;quot;
      Integer result = number1 + number2
    then:&amp;quot;The expected result&amp;quot;
      result == 30
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Al ejecutar las pruebas se nos muestra cuantos tests fueron, cuantos pasaron y cuantos fallaron&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;JUnit 4 Runner, Tests: 1, Failures: 0, Time: 750
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;data-driven-testing&#34;&gt;Data Driven Testing&lt;/h3&gt;

&lt;p&gt;El framework de spock permite probar un mismo método o estructura varias veces gracias al bloque &lt;strong&gt;&lt;em&gt;where:&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class MathSpec extends Specification{
  def &amp;quot;Max of this two numbers&amp;quot;(){
  	given:&amp;quot;3 numbers&amp;quot;
  	expect:&amp;quot;the max of this two numbers&amp;quot;
  	  [a, b].max() == c
  	where:
  	a | b | c
  	1 | 2 | 2
  	3 | 5 | 5
  	8 | 1 | 8
  	1 | 9 | 1
  }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Gracias a su assert &lt;strong&gt;&lt;em&gt;==&lt;/em&gt;&lt;/strong&gt; se nos muestra que caso es el que fallo y por que&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;JUnit 4 Runner, Tests: 1, Failures: 1, Time: 826
Test Failure: Max of two numbers(MathSpec)
Condition not satisfied:

[a, b].max() == c
 |  |  |     |  |
 1  9  9     |  1
             false

        at MathSpec.Max of two numbers(MathSpec.groovy:7)

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Comenzando con CoffeeScript</title>
      <link>/post/beginwithcoffeescript/</link>
      <pubDate>Tue, 01 May 2018 02:42:46 -0500</pubDate>
      
      <guid>/post/beginwithcoffeescript/</guid>
      <description>

&lt;p&gt;Hace poco tiempo estuve en el desarrollo de un sistema informático en el cual toda la parte del front estaba hecho con CoffeeScript, por lo cual tuve la necesidad de aprender un poco hacerca de este maravilloso lenguaje&lt;/p&gt;

&lt;p&gt;CoffeeScript es un transpilador de código, y esto significa, que al momento de compilar, este genera código en javascript.&lt;/p&gt;

&lt;p&gt;El código que esta hecho con CoffeeScript es un código el cual luce bastante bien, es un código que es facil de leer, facil de entender y facil de mantener.&lt;/p&gt;

&lt;h3 id=&#34;instalación&#34;&gt;Instalación&lt;/h3&gt;

&lt;p&gt;CoffeeScript se instala de una manera muy sencilla, lo que tenemos que tener instalado para correrlo en nuestra computadora es lo siguiente:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;node&lt;/li&gt;
&lt;li&gt;npm&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;npm install --general coffeescript
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;uso&#34;&gt;Uso&lt;/h3&gt;

&lt;p&gt;Una vez instalado coffeescript ya podremos hacer uso de este lenguaje, de su shell y ejecutar los comandos disponibles.&lt;/p&gt;

&lt;script src=&#34;https://asciinema.org/a/Y6gJINJfSFpfl9OGjb4LkE4g1.js&#34; id=&#34;asciicast-Y6gJINJfSFpfl9OGjb4LkE4g1&#34; data-size=&#34;small&#34;&gt;&lt;/script&gt;

&lt;h3 id=&#34;compilación&#34;&gt;Compilación&lt;/h3&gt;

&lt;p&gt;Como se pudo observar al tener coffee instalado ya podremos hacer varias cosas, entre las cuales de las mas importantes serian la compilación de nuestros archivos &lt;strong&gt;&lt;em&gt;.coffee&lt;/em&gt;&lt;/strong&gt; a &lt;strong&gt;&lt;em&gt;.js&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&#34;ejemplo-de-archivo-en-coffee&#34;&gt;Ejemplo de archivo en .coffee&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;square = (x) -&amp;gt; x * x
cube = (x) -&amp;gt; square(x) * x
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;archivo-compilado-a-js&#34;&gt;Archivo compilado a .js&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var cube, square;

  square = function(x) {
    return x * x;
  };

  cube = function(x) {
    return square(x) * x;
  };
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;ventajas-de-usar-coffeescript&#34;&gt;Ventajas de usar CoffeeScript&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Nos permite trabajar de una forma mas sencilla&lt;/li&gt;
&lt;li&gt;Escribir menos código&lt;/li&gt;
&lt;li&gt;Podemos aprender javascript leyendo el código compilado&lt;/li&gt;
&lt;li&gt;Facil de mantener&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;desventajas-de-coffeescript&#34;&gt;Desventajas de CoffeeScript&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Ya no tiene actualizaciones desde hace tiempo lo que hace que ya no sea soportado por varios frameworks&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
